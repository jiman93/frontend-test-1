[{"C:\\Users\\Hafiz\\Desktop\\Projects\\frontend-test-1\\comments-manager\\src\\index.js":"1","C:\\Users\\Hafiz\\Desktop\\Projects\\frontend-test-1\\comments-manager\\src\\App.js":"2","C:\\Users\\Hafiz\\Desktop\\Projects\\frontend-test-1\\comments-manager\\src\\reportWebVitals.js":"3","C:\\Users\\Hafiz\\Desktop\\Projects\\frontend-test-1\\comments-manager\\src\\components\\index.js":"4","C:\\Users\\Hafiz\\Desktop\\Projects\\frontend-test-1\\comments-manager\\src\\components\\posts.js":"5","C:\\Users\\Hafiz\\Desktop\\Projects\\frontend-test-1\\comments-manager\\src\\components\\post.js":"6"},{"size":567,"mtime":1606979362474,"results":"7","hashOfConfig":"8"},{"size":846,"mtime":1606979362471,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1606979362475,"results":"10","hashOfConfig":"8"},{"size":85,"mtime":1606979362472,"results":"11","hashOfConfig":"8"},{"size":1685,"mtime":1606979362473,"results":"12","hashOfConfig":"8"},{"size":3570,"mtime":1606979362472,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"jpgpj",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\Hafiz\\Desktop\\Projects\\frontend-test-1\\comments-manager\\src\\index.js",[],["29","30"],"C:\\Users\\Hafiz\\Desktop\\Projects\\frontend-test-1\\comments-manager\\src\\App.js",[],"C:\\Users\\Hafiz\\Desktop\\Projects\\frontend-test-1\\comments-manager\\src\\reportWebVitals.js",[],"C:\\Users\\Hafiz\\Desktop\\Projects\\frontend-test-1\\comments-manager\\src\\components\\index.js",[],"C:\\Users\\Hafiz\\Desktop\\Projects\\frontend-test-1\\comments-manager\\src\\components\\posts.js",["31"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Card, CardHeader, CardBody } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faArrowRight);\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    let response = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n\r\n    if (response.ok) {\r\n      let json = await response.json();\r\n      console.log('JSON', json);\r\n      if (json && Array.isArray(json)) setPosts(json);\r\n    } else {\r\n      alert('HTTP-Error: ' + response.status);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Posts\" className=\"text-left\">\r\n      <div className=\"mt-4\">\r\n        <h5>\r\n          <u>List of posts</u>\r\n        </h5>\r\n        {posts.map((item) => (\r\n          <Card key={item.id} className=\"mt-3\">\r\n            <CardHeader>\r\n              <span>{item.title}</span>\r\n\r\n              <Link\r\n                to={() => {\r\n                  return {\r\n                    pathname: `/post/${item.id}`,\r\n                  };\r\n                }}\r\n              >\r\n                <Button className=\"float-right\" size=\"sm\">\r\n                  <FontAwesomeIcon icon=\"arrow-right\" />\r\n                </Button>\r\n              </Link>\r\n            </CardHeader>\r\n            <CardBody>{item.body}</CardBody>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","C:\\Users\\Hafiz\\Desktop\\Projects\\frontend-test-1\\comments-manager\\src\\components\\post.js",["32"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Card, CardHeader, CardBody, CustomInput, Input } from 'reactstrap';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Post = () => {\r\n  const params = useParams();\r\n  const { id } = params;\r\n\r\n  const [post, setPost] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [filterBy, setFilterBy] = useState('');\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  const fetchData = async () => {\r\n    let response = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`);\r\n\r\n    if (response.ok) {\r\n      let json = await response.json();\r\n      console.log('GET POST', json);\r\n      if (json) setPost(json);\r\n    } else {\r\n      alert('HTTP-Error: ' + response.status);\r\n    }\r\n  };\r\n\r\n  const fetchComments = async (isFilter) => {\r\n    let url = `https://jsonplaceholder.typicode.com/comments?postId=${id}`;\r\n\r\n    if (isFilter) url = `${url}&${filterBy}=${searchText}`;\r\n\r\n    let response = await fetch(url);\r\n\r\n    if (response.ok) {\r\n      let json = await response.json();\r\n      console.log('GET COMMENTS', json);\r\n      if (json && Array.isArray(json)) setComments(json);\r\n    } else {\r\n      alert('HTTP-Error: ' + response.status);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      fetchData();\r\n      fetchComments();\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = () => {\r\n    fetchComments(true);\r\n  };\r\n\r\n  if (!id || !post) return <div>No post found.</div>;\r\n\r\n  return (\r\n    <div className=\"text-left\">\r\n      <div className=\"mt-4\">\r\n        <h5>\r\n          <u>Post Details Page</u>\r\n        </h5>\r\n        <div className=\"mt-4\">\r\n          <h6>{post.title}</h6>\r\n          <p>{post.body}</p>\r\n        </div>\r\n        <div className=\"mt-4 ml-5 mr-5\">\r\n          <h6>\r\n            <u>Comments</u>\r\n          </h6>\r\n          <div className=\"ml-3 w-50\">\r\n            Filter comments by:\r\n            <CustomInput\r\n              type=\"select\"\r\n              id=\"filterBy\"\r\n              name=\"filterBy\"\r\n              value={filterBy}\r\n              onChange={(e) => setFilterBy(e.target.value)}\r\n            >\r\n              <option value=\"\">Select filter criteria</option>\r\n              {['name', 'email', 'body'].map((text, i) => {\r\n                return (\r\n                  <option value={text} key={i}>\r\n                    {text}\r\n                  </option>\r\n                );\r\n              })}\r\n            </CustomInput>\r\n          </div>\r\n          <div className=\"mt-3 ml-3 w-50\">\r\n            Enter search text\r\n            <Input\r\n              name=\"searchText\"\r\n              value={searchText}\r\n              placeholder=\"Search here...\"\r\n              onChange={(e) => setSearchText(e.target.value)}\r\n            />\r\n            <Button onClick={handleSubmit} className=\"mt-3\">\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => fetchComments()} className=\"mt-3 ml-2\">\r\n              Reset\r\n            </Button>\r\n          </div>\r\n          {comments.map((item, i) => (\r\n            <Card className=\"mt-3\" key={item.id}>\r\n              <CardHeader>\r\n                <span>{item.email}</span>\r\n                <span className=\"float-right\">{`#${i + 1}`}</span>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <div className=\"mb-2\">{`Name: ${item.name}`}</div>\r\n                <div className=\"ml-3 mr-3\">{item.body}</div>\r\n              </CardBody>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":31,"column":28,"nodeType":"39","endLine":31,"endColumn":49},{"ruleId":"40","severity":1,"message":"41","line":47,"column":6,"nodeType":"42","endLine":47,"endColumn":8,"suggestions":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchComments', 'fetchData', and 'id'. Either include them or remove the dependency array.","ArrayExpression",["46"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},"Update the dependencies array to be: [fetchComments, fetchData, id]",{"range":"49","text":"50"},[1363,1365],"[fetchComments, fetchData, id]"]